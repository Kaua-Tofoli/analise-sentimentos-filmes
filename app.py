# Importando bibliotecas necessÃ¡rias
import csv
import os
from textblob import TextBlob
import pandas as pd
import streamlit as st
from deep_translator import GoogleTranslator

# Caminho do arquivo CSV com os dados
arquivo_csv = "dados.csv"  # O arquivo deve estar no mesmo diretÃ³rio do app

# FunÃ§Ã£o para ler o CSV e transformar em um DataFrame
def ler_csv_para_df(nome_arquivo):
    if not os.path.exists(nome_arquivo):
        st.error(f"O arquivo '{nome_arquivo}' nÃ£o existe.")
        return pd.DataFrame()

    # LÃª o CSV e mantÃ©m apenas as colunas necessÃ¡rias
    df = pd.read_csv(nome_arquivo, delimiter=';', encoding='latin1')
    df = df[["Nome do Filme (em PortuguÃªs)", "ComentÃ¡rios"]].dropna()
    df.columns = ["filme", "comentario"]
    return df

# FunÃ§Ã£o para traduzir e analisar o sentimento do comentÃ¡rio
def analisar_sentimento(comentario):
    try:
        # Traduz para inglÃªs, pois o TextBlob funciona melhor com esse idioma
        comentario_en = GoogleTranslator(source='auto', target='en').translate(comentario)
        polaridade = TextBlob(comentario_en).sentiment.polarity
    except Exception as e:
        polaridade = 0.0  # Caso dÃª erro, retorna neutro
        print(f"Erro ao traduzir: {e} | ComentÃ¡rio: {comentario}")

    # Classifica o sentimento com base na polaridade
    if polaridade > 0.1:
        return "Bom", polaridade
    elif polaridade < -0.1:
        return "Ruim", polaridade
    else:
        return "Neutro", polaridade

# --- INTERFACE STREAMLIT ---
st.set_page_config(page_title="AnÃ¡lise de Sentimentos de Filmes", layout="wide")
st.title("ðŸŽ¬ AnÃ¡lise de Sentimentos de ComentÃ¡rios de Filmes")

# Carrega os dados
df = ler_csv_para_df(arquivo_csv)

if not df.empty:
    # Aplica a anÃ¡lise de sentimento para cada comentÃ¡rio
    df["Sentimento"], df["Polaridade"] = zip(*df["comentario"].apply(analisar_sentimento))

    # Exibe os dados originais
    with st.expander("ðŸ“„ Ver dados brutos"):
        st.dataframe(df)

    # GrÃ¡fico de sentimentos por filme
    st.subheader("ðŸ“Š DistribuiÃ§Ã£o de Sentimentos por Filme")
    grafico = df.groupby(["filme", "Sentimento"]).size().unstack().fillna(0)
    st.bar_chart(grafico)

    # Filtro por filme e exibiÃ§Ã£o dos comentÃ¡rios
    st.subheader("ðŸ”Ž ComentÃ¡rios por Filme")
    filmes = df["filme"].unique()
    filme_selecionado = st.selectbox("Escolha um filme:", filmes)

    comentarios_filme = df[df["filme"] == filme_selecionado]
    st.write(comentarios_filme[["comentario", "Sentimento", "Polaridade"]])
else:
    st.warning("Nenhum dado foi carregado.")
